<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.auttle.shiro.mapper.ResourcesMapper">
  <resultMap id="BaseResultMap" type="com.auttle.shiro.model.Resources">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="resUrl" jdbcType="VARCHAR" property="resurl" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resources
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.auttle.shiro.model.Resources">
    insert into resources (id, name, resUrl, 
      type, parentId, sort
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{resurl,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{parentid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.auttle.shiro.model.Resources">
    update resources
    set name = #{name,jdbcType=VARCHAR},
      resUrl = #{resurl,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      parentId = #{parentid,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, resUrl, type, parentId, sort
    from resources
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, resUrl, type, parentId, sort
    from resources
  </select>


  <select id="loadUserResources" parameterType="java.util.HashMap" resultType="com.auttle.shiro.model.Resources">
    SELECT re.id,re.name,re.parentId,re.resUrl
    FROM resources re LEFT JOIN role_resources rr
    ON re.id = rr.resourcesId
    LEFT JOIN user_role ur
    ON rr.roleId =ur.roleId
    WHERE ur.userId=#{userid}
    <if test="type != null">
      AND re.type= #{type}
    </if>
    GROUP BY re.id
    ORDER BY re.sort ASC
  </select>

  <select id="queryResourcesListWithSelected" parameterType="int" resultType="com.auttle.shiro.model.Resources">
    SELECT re.id,re.name,re.parentId,re.resUrl,re.type,
      (CASE WHEN EXISTS(SELECT 1
                        FROM role_resources rr WHERE rr.resourcesId=re.id AND rr.roleId=#{rid})
        THEN 'true' ELSE 'false' END) AS checked
    FROM resources re
    WHERE re.parentId !=0
    ORDER BY re.sort ASC
  </select>
</mapper>